{"version":3,"sources":["App.js","index.js"],"names":["initialCards","id","name","level","type","base","enhancement","keen","phys","ele","filteredCards","initialQuery","text","App","useState","query","setQuery","filter","card","toLowerCase","includes","value","onChange","event","target","placeholder","spellCheck","autoComplete","map","className","ReactDOM","render","document","getElementById"],"mappings":"gNAGMA,EAAe,CACnB,CAEEC,GAAI,EACJC,KAAM,UACNC,MAAO,KACPC,KAAM,SAGNC,KAAM,eACNC,YAAa,EACbC,MAAM,EACNC,KAAM,aACNC,IAAK,YAEP,CACER,GAAI,EACJC,KAAM,iBACNC,MAAO,KACPC,KAAM,SAENC,KAAM,aACNC,YAAa,EACbC,MAAM,EACNC,KAAM,cACNC,IAAK,sBAEP,CACER,GAAI,EAEJC,KAAM,qCACNC,MAAO,KACPC,KAAM,SAGNC,KAAM,eACNC,YAAa,EACbC,MAAM,EACNC,KAAM,aACNC,IAAK,YAEP,CACER,GAAI,EACJC,KAAM,2BACNC,MAAO,KACPC,KAAM,SAENC,KAAM,aACNC,YAAa,EACbC,MAAM,EACNC,KAAM,cACNC,IAAK,sBAEP,CAEER,GAAI,EACJC,KAAM,iBACNC,MAAO,KACPC,KAAM,SAGNC,KAAM,eACNC,YAAa,EACbC,MAAM,EACNC,KAAM,aACNC,IAAK,YAEP,CACER,GAAI,EACJC,KAAM,kBACNC,MAAO,KACPC,KAAM,SAENC,KAAM,aACNC,YAAa,EACbC,MAAM,EACNC,KAAM,cACNC,IAAK,sBAEP,CAEER,GAAI,EACJC,KAAM,iBACNC,MAAO,KACPC,KAAM,SAGNC,KAAM,eACNC,YAAa,EACbC,MAAM,EACNC,KAAM,aACNC,IAAK,aAILC,EAAgB,GAEdC,EAAe,CACnBC,KAAM,IAGO,SAASC,IAAO,IAAD,EACFC,mBAASH,GADP,mBACrBI,EADqB,KACdC,EADc,KAY5B,OAFAN,EAAgBV,EAAaiB,QAAO,SAAAC,GAAI,OAAIA,EAAKhB,KAAKiB,cAAcC,SAASL,EAAMH,KAAKO,kBAGtF,sBAAKlB,GAAG,MAAR,UAEI,qBAAKA,GAAG,QAAR,SACE,uBACEC,KAAK,OACLmB,MAAON,EAAMH,KACbU,SAdY,SAAAC,GACpBP,EAAS,2BAAKD,GAAN,kBAAcQ,EAAMC,OAAOtB,KAAOqB,EAAMC,OAAOH,UAc/CI,YAAY,SACZC,WAAW,QACXC,aAAa,UAIjB,qBAAK1B,GAAG,YAER,qBAAKA,GAAG,QAAR,SAEIS,EAAckB,KAAI,SAAAV,GAAI,OACpB,sBAAKW,UAAU,OAAf,UACE,oBAAIA,UAAU,YAAd,SAA2BX,EAAKhB,OAChC,qBAAK2B,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SAA4BX,EAAKf,UAEnC,sBAAK0B,UAAU,YAAf,UACE,qBAAIA,UAAU,YAAd,mBAAiCX,EAAKb,QACtC,qBAAIwB,UAAU,mBAAd,0BAA+CX,EAAKZ,eACpD,wCAAWY,EAAKX,KAAO,OAAS,WAChC,yCACA,mCAAMW,EAAKV,QACX,mCAAMU,EAAKT,YAXYS,EAAKjB,Y,MC5H9C6B,IAASC,OAAO,cAAC,IAAD,UAAe,cAAClB,EAAD,MAAyBmB,SAASC,eAAe,W","file":"static/js/main.cf5de083.chunk.js","sourcesContent":["// dependencies\nimport { useState } from 'react';\n\nconst initialCards = [\n  {\n    // required\n    id: 1,\n    name: 'Justice',\n    level: '20',\n    type: 'Weapon',\n\n    // optional,\n    base: 'Light Hammer',\n    enhancement: 4,\n    keen: true,\n    phys: '2d8 Bludge',\n    ele: '1d8 Posi'\n  },\n  {\n    id: 2,\n    name: 'Voidmind Blade',\n    level: '35',\n    type: 'Weapon',\n\n    base: 'Shortsword',\n    enhancement: 7,\n    keen: true,\n    phys: '2d12 Pierce',\n    ele: '1d8 Acid, 1d4 Nega'\n  },\n  {\n    id: 3,\n    // required\n    name: 'Crafted Enchanted Two-bladed Sword',\n    level: '20',\n    type: 'Weapon',\n\n    // optional,\n    base: 'Light Hammer',\n    enhancement: 4,\n    keen: true,\n    phys: '2d8 Bludge',\n    ele: '1d8 Posi'\n  },\n  {\n    id: 4,\n    name: 'Crafted Silvery Scimitar',\n    level: '35',\n    type: 'Weapon',\n\n    base: 'Shortsword',\n    enhancement: 7,\n    keen: true,\n    phys: '2d12 Pierce',\n    ele: '1d8 Acid, 1d4 Nega'\n  },\n  {\n    // required\n    id: 5,\n    name: 'Frozen Cleaver',\n    level: '20',\n    type: 'Weapon',\n\n    // optional,\n    base: 'Light Hammer',\n    enhancement: 4,\n    keen: true,\n    phys: '2d8 Bludge',\n    ele: '1d8 Posi'\n  },\n  {\n    id: 6,\n    name: \"Halfling's Gift\",\n    level: '35',\n    type: 'Weapon',\n\n    base: 'Shortsword',\n    enhancement: 7,\n    keen: true,\n    phys: '2d12 Pierce',\n    ele: '1d8 Acid, 1d4 Nega'\n  },\n  {\n    // required\n    id: 7,\n    name: 'Frozen Cleaver',\n    level: '20',\n    type: 'Weapon',\n\n    // optional,\n    base: 'Light Hammer',\n    enhancement: 4,\n    keen: true,\n    phys: '2d8 Bludge',\n    ele: '1d8 Posi'\n  }\n]\n\nlet filteredCards = [];\n\nconst initialQuery = {\n  text: ''\n}\n\nexport default function App() {\n  const [query, setQuery] = useState(initialQuery);\n  // const [displayCards] = useState(initialCards);\n  // const [savedCards, setSavedCards] = useState([]);\n\n  const onQueryChange = event => {\n    setQuery({ ...query, [event.target.name]: event.target.value });\n  }\n\n  // recompiles cardstack every render\n  filteredCards = initialCards.filter(card => card.name.toLowerCase().includes(query.text.toLowerCase()));\n\n  return (\n    <div id=\"app\">\n        {/* ========================= */}\n        <div id=\"query\">\n          <input\n            name='text'\n            value={query.text}\n            onChange={onQueryChange}\n            placeholder='search'\n            spellCheck='false'\n            autoComplete='off'\n          />\n        </div>\n        {/* ========================= */}\n        <div id=\"padding\" />\n        {/* ========================= */}\n        <div id=\"cards\">\n          {\n            filteredCards.map(card => (\n              <div className='card' key={card.id}>\n                <h1 className='card-name'>{card.name}</h1>\n                <div className='card-level-line'>\n                  <h2 className='card-level'>{card.level}</h2>\n                </div>\n                <div className='card-info'>\n                  <h2 className='card-base'>Base: {card.base}</h2>\n                  <h2 className='card-enhancement'>Enhancement: {card.enhancement}</h2>\n                  <h2>Keen: {card.keen ? 'True' : 'False'}</h2>\n                  <h2>Damage:</h2>\n                  <h2>~{card.phys}</h2>\n                  <h2>~{card.ele}</h2>\n                </div>\n              </div>\n            ))\n          }\n        </div>\n        {/* ========================= */} \n    </div> \n  )\n}","// dependencies\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// components\nimport App from './App';\n\n// styles\nimport './App.css';\n\n// attach app to dom\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}
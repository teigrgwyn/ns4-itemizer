{"version":3,"sources":["components/Search.js","components/Cards.js","App.js","index.js"],"names":["Search","props","query","onQueryChange","TopDiv","id","StyledInput","name","value","text","onChange","placeholder","spellCheck","autoComplete","styled","div","input","filteredItems","Items","items","filter","card","toLowerCase","includes","map","CardDiv","className","CardNameContainer","CardName","CardBaseContainer","CardBase","base","CardLevel","level","CardInfo","enhancement","keen","phys","ele","h1","h2","h3","App","useState","setQuery","event","target","ReactDOM","render","document","getElementById"],"mappings":"64BAGe,SAASA,EAAOC,GAAQ,IAC7BC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,cAEf,OACE,cAACC,EAAD,CAAQC,GAAG,QAAX,SACE,cAACC,EAAD,CACEC,KAAK,OACLC,MAAON,EAAMO,KACbC,SAAUP,EACVQ,YAAY,SACZC,WAAW,QACXC,aAAa,UAMrB,IAAMT,EAASU,IAAOC,IAAV,KASNT,EAAcQ,IAAOE,MAAV,K,4uFC1BjB,IAGIC,EAAgB,GAEL,SAASC,EAAMjB,GAAQ,IAC5BC,EAAUD,EAAVC,MAUR,OARAe,EAAgBE,EAAMC,QAAO,SAAAC,GAC3B,OAGMA,EAAKd,KAAKe,cAAcC,SAASrB,EAAMO,KAAKa,kBAKlD,cAAC,EAAD,CAAQjB,GAAG,QAAX,SAEIY,EAAcO,KAAI,SAAAH,GAAI,OACpB,eAACI,EAAD,CAASC,UAAU,OAAnB,UACE,eAACC,EAAD,CAAmBD,UAAU,gBAA7B,UACE,cAACE,EAAD,CAAUF,UAAU,YAApB,SAAiCL,EAAKd,OACtC,cAACsB,EAAD,UACE,cAACC,EAAD,CAAUJ,UAAU,YAApB,SAAiCL,EAAKU,SAExC,cAACC,EAAD,CAAWN,UAAU,aAArB,SAAmCL,EAAKY,WAG1C,eAACC,EAAD,CAAUR,UAAU,YAApB,UACE,qBAAIA,UAAU,mBAAd,0BAA+CL,EAAKc,eACpD,wCAAWd,EAAKe,KAAO,OAAS,WAChC,yCACA,mCAAMf,EAAKgB,QACX,mCAAMhB,EAAKiB,YAdgBjB,EAAKhB,SAuB9C,IAAMD,EAASU,IAAOC,IAAV,KASNU,EAAUX,IAAOC,IAAV,KAWPY,EAAoBb,IAAOC,IAAV,KAoBjBa,EAAWd,IAAOyB,GAAV,KAYRV,EAAoBf,IAAOC,IAAV,KAYjBe,EAAWhB,IAAO0B,GAAV,KAgBRR,EAAYlB,IAAO2B,GAAV,KAyBTP,EAAWpB,IAAO2B,GAAV,KASRtB,EAAQ,CAEZ,CACEZ,KAAM,UACN0B,MAAO,GACPF,KAAM,eACNI,YAAa,EACbC,MAAM,EACNC,KAAM,kBACNC,IAAK,gBAEP,CACE/B,KAAM,iBACN0B,MAAO,EACPF,KAAM,cAER,CACExB,KAAM,qCACN0B,MAAO,GACPF,KAAM,oBAER,CACExB,KAAM,2BACN0B,MAAO,GACPF,KAAM,YAER,CACExB,KAAM,iBACN0B,MAAO,GACPF,KAAM,YAER,CACExB,KAAM,kBACN0B,MAAO,EACPF,KAAM,YAER,CACExB,KAAM,6BACN0B,MAAO,GACPF,KAAM,gBAER,CACExB,KAAM,6BACN0B,MAAO,GACPF,KAAM,gBAER,CACExB,KAAM,gCACN0B,MAAO,GACPF,KAAM,oBAER,CACExB,KAAM,eACN0B,MAAO,GACPF,KAAM,cAER,CACExB,KAAM,yBACN0B,MAAO,GACPF,KAAM,cAER,CACExB,KAAM,uBACN0B,MAAO,GACPF,KAAM,cAER,CACExB,KAAM,8BACN0B,MAAO,GACPF,KAAM,e,oHCrNK,SAASW,IAAO,IAAD,EACFC,mBAAS,CAAElC,KAAM,KADf,mBACrBP,EADqB,KACd0C,EADc,KAQ5B,OACE,eAAC,EAAD,CAAQvC,GAAG,MAAX,UACE,cAACL,EAAD,CAAQE,MAAOA,EAAOC,cANJ,SAAA0C,GACpBD,EAAS,2BAAK1C,GAAN,kBAAc2C,EAAMC,OAAOvC,KAAOsC,EAAMC,OAAOtC,YAMrD,cAACU,EAAD,CAAOhB,MAAOA,OAKpB,IAAME,EAASU,IAAOC,IAAV,KCxBZgC,IAASC,OAAO,cAAC,IAAD,UAAe,cAACN,EAAD,MAAyBO,SAASC,eAAe,W","file":"static/js/main.36d79379.chunk.js","sourcesContent":["// dependencies\r\nimport styled from 'styled-components';\r\n\r\nexport default function Search(props) {\r\n  const { query, onQueryChange } = props;\r\n\r\n  return (\r\n    <TopDiv id=\"query\">\r\n      <StyledInput\r\n        name='text'\r\n        value={query.text}\r\n        onChange={onQueryChange}\r\n        placeholder='search'\r\n        spellCheck='false'\r\n        autoComplete='off'\r\n      />\r\n    </TopDiv>\r\n  )\r\n}\r\n\r\nconst TopDiv = styled.div `\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  padding-bottom: 2%;\r\n  /*border-top: 4px dotted #20232A;*/\r\n  border-bottom: 2px solid #20232A;\r\n`\r\n\r\nconst StyledInput = styled.input `\r\n  padding: 5px;\r\n\tbackground-color: #20232A;\r\n\r\n\twidth: 250px;\r\n\theight: 30px;\r\n\r\n\tbox-shadow: 0 0 3px #20232A, 0 0 10px black inset;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid #20232A;\r\n\r\n\ttext-align: center;\r\n\r\n  ::placeholder {\r\n    color: #0D0D0D;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    box-shadow: 0 0 3px #20232A, 0 0 7px black inset;\r\n  }\r\n\r\n  /* :focus::placeholder {\r\n\t  color: #20232A;\r\n  } */\r\n`","// dependencies\r\nimport styled from 'styled-components';\r\n\r\nconst CARDS_MAX = 5;\r\n\r\nlet cardCount = 0;\r\nlet filteredItems = [];\r\n\r\nexport default function Items(props) {\r\n  const { query } = props;\r\n\r\n  filteredItems = items.filter(card => {\r\n    return (\r\n      cardCount >= CARDS_MAX\r\n        ? false\r\n        : card.name.toLowerCase().includes(query.text.toLowerCase())\r\n    )\r\n  })\r\n\r\n  return (\r\n    <TopDiv id=\"cards\">\r\n      {\r\n        filteredItems.map(card => (\r\n          <CardDiv className='card' key={card.id}>\r\n            <CardNameContainer className='card-name-div'>\r\n              <CardName className='card-name'>{card.name}</CardName>\r\n              <CardBaseContainer>\r\n                <CardBase className='card-base'>{card.base}</CardBase>\r\n              </CardBaseContainer>\r\n              <CardLevel className='card-level'>{card.level}</CardLevel>\r\n            </CardNameContainer>\r\n            {/* 'if (key in card)' will return true if a key exists for that object - can use to determine how to label data for display during render (weapons vs armor vs shields etc) */}\r\n            <CardInfo className='card-info'>\r\n              <h2 className='card-enhancement'>Enhancement: {card.enhancement}</h2>\r\n              <h2>Keen: {card.keen ? 'True' : 'False'}</h2>\r\n              <h2>Damage:</h2>\r\n              <h2>~{card.phys}</h2>\r\n              <h2>~{card.ele}</h2>\r\n            </CardInfo>\r\n          </CardDiv>\r\n        ))\r\n      }\r\n    </TopDiv>\r\n  )\r\n}\r\n\r\nconst TopDiv = styled.div `\r\n  padding: 1%;\r\n\r\n  // have cards display uniformly & neatly\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`\r\n\r\nconst CardDiv = styled.div `\r\n  margin: 1%;\r\n\t\r\n  // size of each card\r\n\twidth: 170px;\r\n\theight: 250px;\r\n\r\n\tcolor: darkgray; // placeholder\r\n\tborder: 1px solid crimson; // placeholder\r\n`\r\n\r\nconst CardNameContainer = styled.div `\r\n\tmargin: 2.5%;\r\n  margin-bottom: 5%;\r\n  \r\n  // allow all card properties to be displayed over the card name\r\n  overflow: inset hidden;\r\n  \r\n  // required for card name to display properly due to text transforms\r\n  position: relative;\r\n\r\n  // force all card names to consume 2 lines of text\r\n\theight: 48px;\r\n\r\n  // general styling\r\n  background-color: #20232A;\r\n  box-shadow: 0 0 3px #20232A, 0 0 10px black inset;\r\n\tborder-radius: 10px;\r\n\tborder: 2px solid #20232A;\r\n`\r\n\r\nconst CardName = styled.h1 `\r\n\t// allows single-line titles to be properly vertically-spaced\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\r\n\t// centers title to middle of line\r\n  min-width: 100%;\r\n\ttext-align: center;\r\n`\r\n\r\nconst CardBaseContainer = styled.div `\r\n  // move base to bottom of title space\r\n  position: absolute;\r\n  left: 50%;\r\n  // will change depending on base font size\r\n  transform: translate(-50%, 400%);\r\n\r\n  // centers base to middle of line\r\n  min-width: 100%;\r\n  text-align: center;\r\n`\r\n\r\nconst CardBase = styled.h2 `\r\n  // force text area to have it's own dynamic area\r\n  display: inline;\r\n  padding: 2% 5%;\r\n\r\n  background-color: #20232A;\r\n\r\n  font-size: 0.6rem;\r\n\r\n  // general styling\r\n  background-color: #20232A;\r\n  box-shadow: 0 0 3px #20232A, 0 0 5px black inset;\r\n\tborder-radius: 9px;\r\n\tborder: 2px solid #20232A;\r\n`\r\n\r\nconst CardLevel = styled.h3 `\r\n  // move level to upper-right of title space\r\n  position: absolute;\r\n  // force text to have it's own dynamic area\r\n  padding: 2%;\r\n  padding-bottom: 1.5%;\r\n\r\n  // will change with other styling changes often\r\n  left: 100%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  // centers level to middle of line; px scales equally porportional to level font size\r\n  min-width: 15px;\r\n  min-height: 15px;\r\n  text-align: center;\r\n\r\n  font-size: 0.75rem;\r\n\r\n  // general styling\r\n  background-color: #20232A;\r\n  box-shadow: 0 0 3px #20232A, 0 0 5px black inset;\r\n\tborder-radius: 9px;\r\n\tborder: 2px solid #20232A;\r\n`\r\n\r\nconst CardInfo = styled.h3 `\r\n\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  border: 1px solid crimson;\r\n`\r\n\r\nconst items = [\r\n  // weapons\r\n  {\r\n    name: \"Justice\",\r\n    level: 20,\r\n    base: 'Light Hammer',\r\n    enhancement: 4,\r\n    keen: true,\r\n    phys: '2d8 Bludgeoning',\r\n    ele: '1d8 Positive'\r\n  },\r\n  {\r\n    name: \"Voidmind Blade\",\r\n    level: 1,\r\n    base: 'Shortsword'\r\n  },\r\n  {\r\n    name: \"Crafted Enchanted Two-bladed Sword\",\r\n    level: 25,\r\n    base: 'Two-Bladed Sword'\r\n  },\r\n  {\r\n    name: \"Crafted Silvery Scimitar\",\r\n    level: 20,\r\n    base: 'Scimitar'\r\n  },\r\n  {\r\n    name: \"Frozen Cleaver\",\r\n    level: 20,\r\n    base: 'Scimitar'\r\n  },\r\n  {\r\n    name: \"Halfling's Gift\",\r\n    level: 5,\r\n    base: 'Shortbow'\r\n  },\r\n  {\r\n    name: \"Feon's Staff of the Forest\",\r\n    level: 16,\r\n    base: 'Quarterstaff'\r\n  },\r\n  {\r\n    name: \"Staff of the Crashing Surf\",\r\n    level: 25,\r\n    base: 'Quarterstaff'\r\n  },\r\n  {\r\n    name: \"Githyanki Double Silver Sword\",\r\n    level: 40,\r\n    base: 'Two-Bladed Sword'\r\n  },\r\n  {\r\n    name: \"Mighty Talon\",\r\n    level: 40,\r\n    base: 'Greatsword'\r\n  },\r\n  {\r\n    name: \"Githyanki Silver Sword\",\r\n    level: 40,\r\n    base: 'Greatsword'\r\n  },\r\n  {\r\n    name: \"House Dourden's Will\",\r\n    level: 13,\r\n    base: 'Greatsword'\r\n  },\r\n  {\r\n    name: \"Alzaara Guardian Greatsword\",\r\n    level: 25,\r\n    base: 'Greatsword'\r\n  }\r\n]","/*\n  Theme:\n    Bluish: #20232A\n    Dark Bluish: #0D1117\n\t\tDark Gray: #181A1B\n\t\tNear Black: #0D0D0D\n*/\n\n// dependencies\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\n// components\nimport Search from './components/Search';\nimport Items from './components/Cards';\n\nexport default function App() {\n  const [query, setQuery] = useState({ text: '' });\n  // const [savedCards, setSavedCards] = useState([]);\n\n  const onQueryChange = event => {\n    setQuery({ ...query, [event.target.name]: event.target.value });\n  }\n\n  return (\n    <TopDiv id=\"app\">\n      <Search query={query} onQueryChange={onQueryChange} />\n      <Items query={query} />\n    </TopDiv> \n  )\n}\n\nconst TopDiv = styled.div `\n  display: flex;\n  flex-direction: column;\n`","// dependencies\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// components\nimport App from './App';\n\n// attach app to dom\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}